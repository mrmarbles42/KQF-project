<<<<<<< HEAD
fruit_cig <- fruit_cig %>%
##exclude rows w/ NA values in rot
filter(is.na(rot_pct) == F) %>%
##create log_rot, variety, year, and data source columns
mutate(
log_rot = if_else(rot_pct == 0, 0, log10(rot_pct + 0.01)),
variety = as_factor("ST"),
year = 2021,
month = 10,
data_source = "cig"
) %>%
rename("yield_acre_barrel" = "yield_per_ac_barrel",
"yield_ha_barrel" = "yield_p_ha_barrel",
"yield_ac_kg" = "yield_p_ac_kg",
"yield_ac_lb" = "yield_p_ac_lb",
"site" = "Site",
"rep" = "Rep")
lw_ctrl_cig <- lw_ctrl_cig %>%
#rename cols based on cig_fruit names
rename("yield_acre_barrel" = "yield per acre",
"rot_pct" = "pct_rot",
"wt_p_berry" = "wt_per_berry") %>%
#create yield, data_source, site, variety, kqf, and log(rot) columns
mutate(yield_ha_barrel = yield_acre_barrel * 2.471,
yield_ac_kg = yield_acre_barrel * 45.35929257,
yield_ac_lb = yield_ac_kg * 2.20463,
data_source = "cig_lw",
site = 0,
log_rot = if_else(rot_pct == 0, 0, log10(rot_pct + 0.01)),
variety = "ST",
kqf_final = 4,
kqf_pre = 3)
# cig_fruit_cols <- c("site", "rep", "wt_p_berry", "yield_acre_barrel", "yield_ha_barrel",
#                     "rot_pct", "yield_ac_kg",  "yield_ac_lb", "tacy", "absorbance", "log_rot",
#                     "variety", "year", "data_source")
##combine latewater controls and 24-site cig data
fruit_cig <- fruit_cig %>%
bind_rows(lw_ctrl_cig)
##application_date (char to POSIXct)
pest_decas$date <- parse_date_time(pest_decas$application_date, "mdy")
pest_decas <- pest_decas %>%
#remove old application_date and extraneous columns
select(date,
grower,
bog,
treatment,
active_ingredient) %>%
#relocate new date column
relocate(date) %>%
#create data_source column
mutate(data_source = "decas")
#CIG pest data 2012-2021----
pest_cig <- pest_cig %>%
##application_date (char to POSIXct)
mutate(date = parse_date_time(application_date, orders = "ymd")) %>%
#remove old application_date and select non-extraneous columns
select(date,
grower,
Bog,
treatment,
active_ingredient) %>%
#relocate new date column
relocate(date) %>%
#create data_source col
mutate(data_source = 'cig') %>%
rename("bog" = "Bog")
#climate averages 2003-2021----
temp_precip <- temp_precip %>%
mutate(month = lubridate::month(date),
year = lubridate::year(date))
##change avg_date to numeric
#temp_precip$avg_temp <- as.numeric(temp_precip$avg_temp)
##change month and year to factors ordered by month name
#temp_precip$month <- factor(temp_precip$month, levels = month.name)
#Pest data combine/clean----
##define join columns
comb_pest_cols <- c("date",
"treatment",
"active_ingredient",
"grower",
"bog",
"data_source")
##full join on defined columns
pest_comb <- pest_decas %>%
full_join(pest_cig, by = comb_pest_cols, suffix = c("_decas", "_cig")) %>%
mutate(month = lubridate::month(date),
year = lubridate::year(date))
#redefine and collapse repeated fungicides
pest_comb$active_ingredient <-
str_replace_all(
pest_comb$active_ingredient,
c(
"Manganese ethylenebisdithiocarbamate" = "EBDC",
"Mancozeb" = "EBDC",
"EDBC" = "EBDC",
"Polyoxin D Zinc Salt" = "Polyoxin D",
"Polyoxin D zinc salt" = "Polyoxin D"
)
)
#define alternative fungicides
other_ingredients <- c("Cuprous Oxide",
"Fosetyl-Al",
"Polyoxin D")
fungicide_use <- pest_comb %>%
#filter out non-fungicide treatments
filter(
active_ingredient %in% c(
"Copper Hydroxide",
"Cuprous Oxide",
"Polyoxin D",
"Chlorothalonil",
"Azoxystrobin",
"Fenbuconazole",
"Fosetyl-Al",
"EBDC",
"Ferbam"
)
) %>%
#collapse fungicides w/ <50 instances and rm original column
mutate(ingredient = fct_collapse(active_ingredient,
other = other_ingredients)) %>%
select(-active_ingredient)
pest_temp_combined <- fungicide_use %>%
full_join(temp_precip, by = c("year", "month"), suffix = c("_fungi", "_temps")) %>%
select(-date_temps) %>%
rename("date" = "date_fungi")
#fruit data combine----
fruit_comb <- bind_rows(fruit_cig, fruit_decas)
fruit_temp_combined <- fruit_comb %>%
full_join(temp_precip, by = c("year", "month")) %>%
select(-date.y) %>%
rename("date" = "date.x")
#full data combine----
##define joining columns for combined data
comb_cols <- c("data_source", "date", "month", "year", "avg_temp_f", "tot_precip", "grower", "bog", "treatment")
#Join all columns on joining vec
kqf_data_combined <- fruit_temp_combined %>%
full_join(pest_temp_combined,
by = comb_cols,
suffix = c("_fruit", "_pest"))
#full data clean----
##factor coercion
kqf_data_combined$variety <- as_factor(kqf_data_combined$variety)
kqf_data_combined$site <- as_factor(kqf_data_combined$site)
kqf_data_combined$rep <- as_factor(kqf_data_combined$rep)
kqf_data_combined$data_source <- as_factor(kqf_data_combined$data_source)
kqf_data_combined$treatment <- as_factor(kqf_data_combined$treatment)
kqf_data_combined$ingredient <- as_factor(kqf_data_combined$ingredient)
kqf_data_combined <- kqf_data_combined %>%
mutate(kqf_final = ifelse(year == 2021, 4, kqf_final))
#Extraneous object removal from environment----
rm(pest_cig,
pest_decas,
pest_comb,
fungicide_use,
comb_pest_cols)
rm(other_ingredients,
other_varieties,
comb_cols,
temp_precip)
rm(fruit_cig,
fruit_decas,
fruit_comb,
lw_ctrl_cig)
rm(fruit_temp_combined,
pest_temp_combined)
# fwrite(kqf_data_combined, "kqf_data_combined.csv")
kqf_data_combined$kqf_final
kqf_data_combined$kqf_pre
kqf_data_combined$kqf_pre = as.numeric(as.character(kqf_data_combined$kqf_pre))
plot(jitter(kqf_final) ~ jitter(kqf_pre), data = kqf_data_combined)
class(kqf_data_combined$kqf_final)
glimpse(kqf_data_combined)
##application_date (char to POSIXct)
pest_decas$date <- parse_date_time(pest_decas$application_date, "mdy")
source(here("code", "kqf_import.R"))
##date manipulation
fruit_decas$date <- parse_date_time(fruit_decas$date, "mdy")
##collapsed varieties vector
other_varieties = c("OE","ORST","OH",
"OM","GR","OB",
"SN","MC","SK",
"ORHO","OS","MX",
"GD","PD")
fruit_decas <- fruit_decas %>%
##exclude rows w/ NA values in rot
filter(is.na(rot) == F) %>%
##create log_rot / year / month columns and collapse varieties by frequency
mutate(
log_rot = if_else(rot == 0, 0, log10(rot + 0.01)) ,
variety = fct_collapse(variety, other = other_varieties),
year = lubridate::year(date),
month = lubridate::month(date),
##create data_source column
data_source = as.factor("decas")
) %>%
##relocate date column to [,1]
relocate(date) %>%
##rename columns
rename("grower" = "grower_id",
"rot_pct" = "rot")
##factor kqf values
fruit_decas$kqf_final <- as.factor(fruit_decas$kqf_final)
fruit_decas$kqf_pre <- as.factor(fruit_decas$kqf_pre)
fruit_cig <- fruit_cig %>%
##exclude rows w/ NA values in rot
filter(is.na(rot_pct) == F) %>%
##create log_rot, variety, year, and data source columns
mutate(
log_rot = if_else(rot_pct == 0, 0, log10(rot_pct + 0.01)),
variety = as_factor("ST"),
year = 2021,
month = 10,
data_source = "cig"
) %>%
rename("yield_acre_barrel" = "yield_per_ac_barrel",
"yield_ha_barrel" = "yield_p_ha_barrel",
"yield_ac_kg" = "yield_p_ac_kg",
"yield_ac_lb" = "yield_p_ac_lb",
"site" = "Site",
"rep" = "Rep")
lw_ctrl_cig <- lw_ctrl_cig %>%
#rename cols based on cig_fruit names
rename("yield_acre_barrel" = "yield per acre",
"rot_pct" = "pct_rot",
"wt_p_berry" = "wt_per_berry") %>%
#create yield, data_source, site, variety, kqf, and log(rot) columns
mutate(yield_ha_barrel = yield_acre_barrel * 2.471,
yield_ac_kg = yield_acre_barrel * 45.35929257,
yield_ac_lb = yield_ac_kg * 2.20463,
data_source = "cig_lw",
site = 0,
log_rot = if_else(rot_pct == 0, 0, log10(rot_pct + 0.01)),
variety = "ST",
kqf_final = 4,
kqf_pre = 3)
##combine latewater controls and 24-site cig data
fruit_cig <- fruit_cig %>%
bind_rows(lw_ctrl_cig)
##application_date (char to POSIXct)
pest_decas$date <- parse_date_time(pest_decas$application_date, "mdy")
pest_decas <- pest_decas %>%
#remove old application_date and extraneous columns
select(date,
grower,
bog,
treatment,
active_ingredient) %>%
#relocate new date column
relocate(date) %>%
#create data_source column
mutate(data_source = "decas")
pest_cig <- pest_cig %>%
##application_date (char to POSIXct)
mutate(date = parse_date_time(application_date, orders = "ymd")) %>%
#remove old application_date and select non-extraneous columns
select(date,
grower,
Bog,
treatment,
active_ingredient) %>%
#relocate new date column
relocate(date) %>%
#create data_source col
mutate(data_source = 'cig') %>%
rename("bog" = "Bog")
temp_precip <- temp_precip %>%
mutate(month = lubridate::month(date),
year = lubridate::year(date))
##define join columns
comb_pest_cols <- c("date",
"treatment",
"active_ingredient",
"grower",
"bog",
"data_source")
##full join on defined columns
pest_comb <- pest_decas %>%
full_join(pest_cig, by = comb_pest_cols, suffix = c("_decas", "_cig")) %>%
mutate(month = lubridate::month(date),
year = lubridate::year(date))
#redefine and collapse repeated fungicides
pest_comb$active_ingredient <-
str_replace_all(
pest_comb$active_ingredient,
c(
"Manganese ethylenebisdithiocarbamate" = "EBDC",
"Mancozeb" = "EBDC",
"EDBC" = "EBDC",
"Polyoxin D Zinc Salt" = "Polyoxin D",
"Polyoxin D zinc salt" = "Polyoxin D"
)
)
#define alternative fungicides
other_ingredients <- c("Cuprous Oxide",
"Fosetyl-Al",
"Polyoxin D")
fungicide_use <- pest_comb %>%
#filter out non-fungicide treatments
filter(
active_ingredient %in% c(
"Copper Hydroxide",
"Cuprous Oxide",
"Polyoxin D",
"Chlorothalonil",
"Azoxystrobin",
"Fenbuconazole",
"Fosetyl-Al",
"EBDC",
"Ferbam"
)
) %>%
#collapse fungicides w/ <50 instances and rm original column
mutate(ingredient = fct_collapse(active_ingredient,
other = other_ingredients)) %>%
select(-active_ingredient)
pest_temp_combined <- fungicide_use %>%
full_join(temp_precip, by = c("year", "month"), suffix = c("_fungi", "_temps")) %>%
select(-date_temps) %>%
rename("date" = "date_fungi")
fruit_comb <- bind_rows(fruit_cig, fruit_decas)
source(here("code", "kqf_import.R"))
##date manipulation
fruit_decas$date <- parse_date_time(fruit_decas$date, "mdy")
##collapsed varieties vector
other_varieties = c("OE","ORST","OH",
"OM","GR","OB",
"SN","MC","SK",
"ORHO","OS","MX",
"GD","PD")
fruit_decas <- fruit_decas %>%
##exclude rows w/ NA values in rot
filter(is.na(rot) == F) %>%
##create log_rot / year / month columns and collapse varieties by frequency
mutate(
log_rot = if_else(rot == 0, 0, log10(rot + 0.01)) ,
variety = fct_collapse(variety, other = other_varieties),
year = lubridate::year(date),
month = lubridate::month(date),
##create data_source column
data_source = as.factor("decas")
) %>%
##relocate date column to [,1]
relocate(date) %>%
##rename columns
rename("grower" = "grower_id",
"rot_pct" = "rot")
fruit_cig <- fruit_cig %>%
##exclude rows w/ NA values in rot
filter(is.na(rot_pct) == F) %>%
##create log_rot, variety, year, and data source columns
mutate(
log_rot = if_else(rot_pct == 0, 0, log10(rot_pct + 0.01)),
variety = as_factor("ST"),
year = 2021,
month = 10,
data_source = "cig"
) %>%
rename("yield_acre_barrel" = "yield_per_ac_barrel",
"yield_ha_barrel" = "yield_p_ha_barrel",
"yield_ac_kg" = "yield_p_ac_kg",
"yield_ac_lb" = "yield_p_ac_lb",
"site" = "Site",
"rep" = "Rep")
lw_ctrl_cig <- lw_ctrl_cig %>%
#rename cols based on cig_fruit names
rename("yield_acre_barrel" = "yield per acre",
"rot_pct" = "pct_rot",
"wt_p_berry" = "wt_per_berry") %>%
#create yield, data_source, site, variety, kqf, and log(rot) columns
mutate(yield_ha_barrel = yield_acre_barrel * 2.471,
yield_ac_kg = yield_acre_barrel * 45.35929257,
yield_ac_lb = yield_ac_kg * 2.20463,
data_source = "cig_lw",
site = 0,
log_rot = if_else(rot_pct == 0, 0, log10(rot_pct + 0.01)),
variety = "ST",
kqf_final = 4,
kqf_pre = 3)
##combine latewater controls and 24-site cig data
fruit_cig <- fruit_cig %>%
bind_rows(lw_ctrl_cig)
##application_date (char to POSIXct)
pest_decas$date <- parse_date_time(pest_decas$application_date, "mdy")
pest_decas <- pest_decas %>%
#remove old application_date and extraneous columns
select(date,
grower,
bog,
treatment,
active_ingredient) %>%
#relocate new date column
relocate(date) %>%
#create data_source column
mutate(data_source = "decas")
pest_cig <- pest_cig %>%
##application_date (char to POSIXct)
mutate(date = parse_date_time(application_date, orders = "ymd")) %>%
#remove old application_date and select non-extraneous columns
select(date,
grower,
Bog,
treatment,
active_ingredient) %>%
#relocate new date column
relocate(date) %>%
#create data_source col
mutate(data_source = 'cig') %>%
rename("bog" = "Bog")
temp_precip <- temp_precip %>%
mutate(month = lubridate::month(date),
year = lubridate::year(date))
##define join columns
comb_pest_cols <- c("date",
"treatment",
"active_ingredient",
"grower",
"bog",
"data_source")
##full join on defined columns
pest_comb <- pest_decas %>%
full_join(pest_cig, by = comb_pest_cols, suffix = c("_decas", "_cig")) %>%
mutate(month = lubridate::month(date),
year = lubridate::year(date))
#redefine and collapse repeated fungicides
pest_comb$active_ingredient <-
str_replace_all(
pest_comb$active_ingredient,
c(
"Manganese ethylenebisdithiocarbamate" = "EBDC",
"Mancozeb" = "EBDC",
"EDBC" = "EBDC",
"Polyoxin D Zinc Salt" = "Polyoxin D",
"Polyoxin D zinc salt" = "Polyoxin D"
)
)
#define alternative fungicides
other_ingredients <- c("Cuprous Oxide",
"Fosetyl-Al",
"Polyoxin D")
fungicide_use <- pest_comb %>%
#filter out non-fungicide treatments
filter(
active_ingredient %in% c(
"Copper Hydroxide",
"Cuprous Oxide",
"Polyoxin D",
"Chlorothalonil",
"Azoxystrobin",
"Fenbuconazole",
"Fosetyl-Al",
"EBDC",
"Ferbam"
)
) %>%
#collapse fungicides w/ <50 instances and rm original column
mutate(ingredient = fct_collapse(active_ingredient,
other = other_ingredients)) %>%
select(-active_ingredient)
pest_temp_combined <- fungicide_use %>%
full_join(temp_precip, by = c("year", "month"), suffix = c("_fungi", "_temps")) %>%
select(-date_temps) %>%
rename("date" = "date_fungi")
fruit_comb <- bind_rows(fruit_cig, fruit_decas)
fruit_temp_combined <- fruit_comb %>%
full_join(temp_precip, by = c("year", "month")) %>%
select(-date.y) %>%
rename("date" = "date.x")
##define joining columns for combined data
comb_cols <- c("data_source", "date", "month", "year", "avg_temp_f", "tot_precip", "grower", "bog", "treatment")
#Join all columns on joining vec
kqf_data_combined <- fruit_temp_combined %>%
full_join(pest_temp_combined,
by = comb_cols,
suffix = c("_fruit", "_pest"))
##factor coercion
kqf_data_combined$variety <- as_factor(kqf_data_combined$variety)
kqf_data_combined$site <- as_factor(kqf_data_combined$site)
kqf_data_combined$rep <- as_factor(kqf_data_combined$rep)
kqf_data_combined$data_source <- as_factor(kqf_data_combined$data_source)
kqf_data_combined$treatment <- as_factor(kqf_data_combined$treatment)
kqf_data_combined$ingredient <- as_factor(kqf_data_combined$ingredient)
kqf_data_combined <- kqf_data_combined %>%
mutate(kqf_final = ifelse(year == 2021, 4, kqf_final))
rm(pest_cig,
pest_decas,
pest_comb,
fungicide_use,
comb_pest_cols)
rm(other_ingredients,
other_varieties,
comb_cols,
temp_precip)
rm(fruit_cig,
fruit_decas,
fruit_comb,
lw_ctrl_cig)
rm(fruit_temp_combined,
pest_temp_combined)
kqf_data_combined$kqf_final
kqf_data_combined$kqf_pre
kqf_data_combined$kqf_final
plot(jitter(kqf_final) ~ jitter(kqf_pre), data = kqf_data_combined)
glimpse(kqf_data_combined)
plot(rot_pct ~ jitter(kqf_pre), data = kqf_data_combined)
summary(kqf_data_combined$rot_pct)
rm(list = ls())
require(here)
dat_bird = read.csv(
here("data", "bird.sub.csv")
)
head(dat_bird)
=======
scale_y_continuous(limits = c(-10,10), breaks = c(-10, -5, 0, 5, 10))
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(0, 5, 10))
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(0, (sum(precip)/3), 10))
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(min(precip) -1, (sum(precip)/3), max(precip) + 1))
ab2 <- lme4::lmer(log_rot ~ temp_1 + precip_1 + variety +(1 | bog),
data = fruit_data_wide)
#pt_10_variety
ab2 <- lme4::lmer(log_rot ~ temp_1 + precip_1 + (1 | bog),
data = fruit_data_wide)
grow_nest <- fruit_data_wide %>%
nest(-grower)
View(grow_nest)
View(grow_nest[[2]][[3]])
summary(m_10)
summary(m_11)
summary(m_9
summary(m_9)
summary(m_9)
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(min(precip) -0.1, (sum(precip)/3), max(precip) + 0.1))
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(0, (sum(precip)/3), 10))
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
# fruit_decas)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
View(fruit_decas)
levels(fruit_decas$month)
levels(as.factor(fruit_decas$month))
require(here)
#source(here("code", "kqf_clean.R"))
source(here("code", "kqf_analysis.R"))
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(0, (sum(precip)/3), 10))
summary(m_9)
summary(m_10)
summary(m_11)
View(fruit_data_wide)
View(temp_precip)
levels(as.factor(temp_precip))
#climate parameters 2003-2020----
#data import
temp_precip <- fread(here("data/base_files", "kqf_temp_precip.csv"))
View(temp_precip)
fruit_data_wide %>%
q''
View(fruit_data_wide)
filter(month = 10, year = 2006)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
View(fruit_decas)
glimpse(fruit_decas)
fruit_data_wide %>%
ggplot(aes(year)) +
geom_boxplot()
View(fruit_decas)
fruit_data_wide %>%
ggplot(aes(year, temp_10)) +
geom_boxplot()
fruit_data_wide %>%
ggplot(aes(as.factor(year), temp_10)) +
geom_boxplot()
fruit_data_wide %>%
filter(year %in% 2012:2018)
fruit_data_wide %>%
filter(year %in% 2012:2018) %>%
ggplot(aes(as.factor(year), temp_10)) +
geom_boxplot()
fruit_data_wide %>%
filter(year %in% 2012:2018) %>%
ggplot(aes(as.factor(year), temp_11)) +
geom_boxplot()
summary(m_9)
summary(m_10)
summary(m_11)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_analysis.R", echo=TRUE)
summary(m_9)
summary(m_10)
summary(m_11)
View(m_9)
View(m_11)
hist(resid(m_9))
hist(resid(m_10))
hist(resid(m_11))
qqnorm(resid(m_10))
qqnorm(resid(m_11))
qqnorm(resid(m_9))
plot(resid(m_10), predict())
plot(resid(m_10), predict(m_10))
plot(resid(m_11), predict(m_11))
plot(resid(m_9), predict(m_9))
ls()
a <- data.frame([c(1,2,3,4)])
12l
12L
class(12.123)
source(here("code", "kqf_clean.R"))
library(here)
source(here("code", "kqf_clean.R"))
source(here("code", "kqf_clean.R"))
glimpse(fruit_data_wide)
#NLME----
m_9 <- lme4::lmer(log_rot ~ temp_9 + precip_9 + (1 | bog),
data = fruit_data_wide)
m_10 <- lme4::lmer(log_rot ~ temp_10 + precip_10 + (1 | bog),
data = fruit_data_wide)
m_11 <- lme4::lmer(log_rot ~ temp_11 + precip_11 + (1 | bog),
data = fruit_data_wide)
m_12 <- lme4::lmer(log_rot ~ temp_12 + precip_12 + (1 | bog),
data = fruit_data_wide)
install.packages("gtsummary")
library(gtsummary)
install.packages(c("adehabitatMA", "bit", "blob", "bookdown", "broom", "bslib", "cachem", "checkmate", "cli", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dtplyr", "emplik", "evaluate", "extrafont", "fansi", "fastmap", "filehash", "fontawesome", "gargle", "gdata", "gdistance", "gdtools", "geosphere", "ggmap", "ggplot2", "gh", "googledrive", "googlesheets4", "gtable", "gtools", "haven", "hexbin", "highr", "hms", "httpuv", "httr", "igraph", "isoband", "jpeg", "jsonlite", "knitr", "later", "lattice", "lme4", "lubridate", "marmap", "Matrix", "modelr", "ncdf4", "openssl", "openxlsx", "packrat", "plotly", "plyr", "png", "processx", "ps", "psych", "purrr", "quantreg", "raster", "Rcpp", "RcppTOML", "readr", "readxl", "renv", "reticulate", "rgdal", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "Rttf2pt1", "shiny", "sourcetools", "sp", "stringi", "stringr", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "viridisLite", "visdat", "vroom", "waldo", "xfun", "xml2", "yaml", "zip"))
install.packages(c("adehabitatMA", "bit", "blob", "bookdown", "broom", "bslib", "cachem", "checkmate", "cli", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dtplyr", "emplik", "evaluate", "extrafont", "fansi", "fastmap", "filehash", "fontawesome", "gargle", "gdata", "gdistance", "gdtools", "geosphere", "ggmap", "ggplot2", "gh", "googledrive", "googlesheets4", "gtable", "gtools", "haven", "hexbin", "highr", "hms", "httpuv", "httr", "igraph", "isoband", "jpeg", "jsonlite", "knitr", "later", "lattice", "lme4", "lubridate", "marmap", "Matrix", "modelr", "ncdf4", "openssl", "openxlsx", "packrat", "plotly", "plyr", "png", "processx", "ps", "psych", "purrr", "quantreg", "raster", "Rcpp", "RcppTOML", "readr", "readxl", "renv", "reticulate", "rgdal", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "Rttf2pt1", "shiny", "sourcetools", "sp", "stringi", "stringr", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "viridisLite", "visdat", "vroom", "waldo", "xfun", "xml2", "yaml", "zip"))
install.packages(c("adehabitatMA", "bit", "blob", "bookdown", "broom", "bslib", "cachem", "checkmate", "cli", "colorspace", "commonmark", "curl", "data.table", "dbplyr", "digest", "dtplyr", "emplik", "evaluate", "extrafont", "fansi", "fastmap", "filehash", "fontawesome", "gargle", "gdata", "gdistance", "gdtools", "geosphere", "ggmap", "ggplot2", "gh", "googledrive", "googlesheets4", "gtable", "gtools", "haven", "hexbin", "highr", "hms", "httpuv", "httr", "igraph", "isoband", "jpeg", "jsonlite", "knitr", "later", "lattice", "lme4", "lubridate", "marmap", "Matrix", "modelr", "ncdf4", "openssl", "openxlsx", "packrat", "plotly", "plyr", "png", "processx", "ps", "psych", "purrr", "quantreg", "raster", "Rcpp", "RcppTOML", "readr", "readxl", "renv", "reticulate", "rgdal", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "Rttf2pt1", "shiny", "sourcetools", "sp", "stringi", "stringr", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "viridisLite", "visdat", "vroom", "waldo", "xfun", "xml2", "yaml", "zip"))
library(gtsummary)
tbl_summary(m_11)
summary(m_11)
m_11_sum <- summary(m_11)
View(m_11_sum)
m_11_sum$coefficients
tbl_summary(m_11_sum$coefficients)
tbl_summary(data.frame(m_11_sum$coefficients))
tbl_summary(data.frame(m_11_sum))
tbl_summary(data.frame(m_11_sum$residuals))
summary(data.frame(m_11_sum$residuals))
summary(data.frame(m_11_sum$coefficients))
summary(m_11)
summary(data.frame(m_11_sum$coefficients))
View(fruit_data_wide)
tbl_sum <- fruit_data_wide %>%
group_by(grower, month) %>%
select(rot_pct, final_points)
library(tidyverse)
tbl_sum <- fruit_data_wide %>%
group_by(grower, month) %>%
select(rot_pct, final_points)
View(tbl_sum)
tbl_sum <- fruit_data_wide %>%
group_by(month) %>%
select(rot_pct, final_points)
View(tbl_sum)
tbl_summary(tbl_sum)
nlme_coef %>%
filter(month %in% c(9,10,11)) %>%
ggplot(aes(as.factor(month), precip)) +
geom_point() +
scale_y_continuous(limits = c(0,10), breaks = c(0, (sum(precip)/3), 10))
fruit_data_wide %>%
filter(rot_pct != 0 & data_source == "decas") %>%
ggplot(aes(log_rot)) +
geom_freqpoly()
install.packages("summary.lme")
library(psych)
describe(fruit_data_wide)
#summaries----
obj <- describe(fruit_data_wide)
View(obj)
View(obj)
tbl_summary(obj)
tbl_summary(obj$mean)
obj %>%
select(row.names(.), n, mean, sd, median,) %>%
describe(.)
obj %>%
select( n, mean, sd, median,) %>%
describe(.)
obj %>%
filter(rot_pct, color, variety, log_rot) %>%
describe(.)
obj %>%
filter(row.names(rot_pct, color, variety, log_rot)) %>%
describe(.)
obj %>%
filter(row.names(rot_pct)) %>%
describe(.)
obj %>%
describe(.)
obj %>%
describe(., omit = T)
obj %>%
describe(., omit = T)
describe(fruit_data_wide, omit = T)
describe(fruit_data_wide, omit = T, group=fruit_data_wide$final_points)
describe(fruit_data_wide, omit = T, group=fruit_data_wide$bog)
describeBy(fruit_data_wide, omit = T, group=fruit_data_wide$bog)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color) %>%
describeBy(., omit = T, group=fruit_data_wide$bog)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
droplevels(.$final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
droplevels() %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
filter(final_points %in% c(2,3,4,7)) %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
levels <- c(2,3,4,7)
fruit_data_wide %>%
filter(final_points %in% levels) %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
filter(is.na(rot_pct) == F) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color) %>%
filter(is.na(rot_pct) == F) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points[2,3,4,7])
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points[c(2,3,4,7)])
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
tbl_summary(fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points))
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
table(fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points))
table(as.tibble(fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)))
table(as_tibble(fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)))
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points))
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
fruit_data_wide %>%
select(rot_pct, log_rot, debris, color, final_points) %>%
describeBy(., omit = T, group=fruit_data_wide$final_points)
table(fruit_data_wide$rot_pct)
tbl_summary(fruit_data_wide$rot_pct)
summary(fruit_data_wide$rot_pct)
summary(fruit_data_wide)
fruit_data_wide %>%
select(rot_pct, log_rot, color, variety) %>%
summary(.)
fruit_data_wide %>%
select(rot_pct, log_rot, color, variety) %>%
summary(., na.rm = T)
fruit_data_wide %>%
filter(is.na(rot_pct) == F) %>%
select(rot_pct, log_rot, color, variety) %>%
summary(.)
fruit_data_wide %>%
filter(is.na(rot_pct) == F) %>%
select(rot_pct, log_rot, color, variety) %>%
table(.)
s
asdf
q
fruit_data_wide %>%
filter(is.na(rot_pct) == F) %>%
select(rot_pct, log_rot, color, variety) %>%
tbl_continuous(.)
fruit_data_wide %>%
filter(is.na(rot_pct) == F) %>%
select(rot_pct, log_rot, color, variety) %>%
tbl(.)
fruit_data_wide %>%
filter(is.na(rot_pct) == F) %>%
select(rot_pct, log_rot, color, variety) %>%
summary.table(.)
fruit_data_wide %>%
filter(is.na(rot_pct) == F) %>%
select(rot_pct, log_rot, color, variety) %>%
summary(.)
rm(fruit_cig)
source(here("code", "kqf_clean.R"))
library(here)
source(here("code", "kqf_clean.R"))
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
library(data.table)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
remove.packages("data.table")
install.packages("data.table")
library(data.table)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
renv::record("renv@0.17.3")
renv::status()
renv::snapshot()
renv::status()
install.packages("skimr")
library(skimr)
library(here)
library(lme4)
library(GGally)
library(broom)
library(psych)
source(here("code", "kqf_clean.R"))
m_9 <- lme4::lmer(log_rot ~ temp_9 + precip_9 + (1 | bog),
data = fruit_data_wide)
m_10 <- lme4::lmer(log_rot ~ temp_10 + precip_10 + (1 | bog),
data = fruit_data_wide)
m_11 <- lme4::lmer(log_rot ~ temp_11 + precip_11 + (1 | bog),
data = fruit_data_wide)
skim(m_10)
summary(m_10)
skim(fruit_decas)
skim(fruit_data_wide)
fruit_data_wide %>%
group_by(bog) %>%
filter(is.na(temp_9) == F) %>%
summarize(max = max(temp_9),
min = min(temp_9),
mean = mean(temp_9),
median = median(temp_9),
n = n()) %>%
arrange(bog, .by_group = T)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_analysis.R", echo=TRUE)
ranef()
ranef(m_10)
rand_eff <- ranef(m_10)
plot(m10_fit, rand_eff)
m10_rand <- ranef.merMod(m_10)
logrot_vs_kqf <- fruit_data_wide %>%
filter(is.na(final_points) == F) %>%
ggplot(aes(as.factor(final_points), log_rot)) +
geom_jitter() +
geom_boxplot()
logrot_vs_kqf
rstandard(m_10)
cooks.distance(m_10)
plot(cooks.distance(m_10))
m10_cooks <- cooks.distance(m_10)
plot(m10_resid, m10_cooks)
plot(m10_fit, m10_cooks)
AIC(m_9)
BIC(m_9)
AIC(m_10)
m10_resid <- resid(m_10)
BIC(m_10)
BIC(m_11)
AIC(m_9)
BIC(m_9)
)
summary(m_9)
AIC(m_9)
BIC(m_9)
AIC(m_10)
BIC(m_10)
AIC(m_11)
BIC(m_11)
plot(m10_fit, m10_resid) #fitted values vs residuals
m_10 %>%
ggplot(aes(m10_fit, m10_resid)) +
geom_point()
plot(m10_fit, m10_resid,
xlab = "Predicted values",
ylab = "Residual values",
title = "Predicted vs Residuals") #fitted values vs residuals
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_analysis.R", echo=TRUE)
qqnorm(m_10)
m_10@cnms
m_10@optinfo
m_10@frame
m10_df <- m_10@frame
View(m10_df)
fitted(m10_df)
predict(m10_df)
lme4::lmer(log_rot ~ temp_10 + precip_10 + variety + (1 | bog),
data = fruit_data_wide)
plot(m10_fit, m10_resid,
xlab = "Predicted values",
ylab = "Residual values",
main = "Predicted vs Residuals (model: m_10)") #fitted values vs residuals
View(fruit_data_wide)
plot(date, m10_fit)
plot(factor(date), m10_fit)
plot((date), m10_resid)
plot(year, m10_resid)
plot(as.factor(year), m10_resid)
install.packages("stargazer")
library(stargazer) # for tables
stargazer(m_9, m_10, m_11)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/eda.r", echo=TRUE)
library(here)   # for file path management
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/eda.r", echo=TRUE)
# call R installed packages necessary for exploratory data analysis
library(tidyverse)  # for data manipulation
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/eda.r", echo=TRUE)
source(here("code", "kqf_clean.R"))
View(fruit_data_wide)
fruit_data_wide <- fruit_decas %>%
full_join(temp_precip, by = c("year", "month" = "month_0")) %>%
rename("date" = "date.x") %>%
#join points on year col
full_join(points, by = c("year")) %>%
#Remove duplicates fruit data
unique() %>%
select(-debris, -color)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
View(fruit_data_wide)
fruit_data_wide <- fruit_decas %>%
full_join(temp_precip, by = c("year", "month" = "month_0")) %>%
rename("date" = "date.x") %>%
#join points on year col
full_join(points, by = c("year")) %>%
#Remove duplicates fruit data
unique() %>%
select(-debris, -color, -date.y)
fruit_data_wide <- fruit_decas %>%
full_join(temp_precip, by = c("year", "month" = "month_0")) %>%
rename("date" = "date.x") %>%
#join points on year col
full_join(points, by = c("year")) %>%
#Remove duplicates fruit data
unique() %>%
select(-debris, -color, -date.y)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
View(fruit_data_wide)
View(fruit_decas)
fruit_decas <- fruit_decas %>%
##exclude rows w/ NA values in rot
filter(is.na(rot_pct) == F) %>%
##create log_rot / year / month columns and collapse varieties by frequency
mutate(
log_rot = log10(rot_pct + 1) ,
variety = fct_collapse(variety, other = other_varieties),
year = lubridate::year(date),
month = lubridate::month(date),
##create data_source column
data_source = as.factor("decas")
) %>%
##relocate date column to [,1]
relocate(date) %>%
select(-color, -debris)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
View(pest_decas)
View(fruit_decas)
View(fungicide_use)
View(lw_ctrl_cig)
View(pest_cig)
View(pest_comb)
View(pest_decas)
View(fruit_cig)
View(fruit_data_wide)
View(fruit_decas)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_clean.R", echo=TRUE)
View(fruit_decas)
View(fruit_data_wide)
tidyverse_update()
citation("tidyverse")
citation("data.table")
citation("lubridate")
citation("here")
citation("openxlsx")
citation("visdat")
citation("forcats")
citation("lme4")
citation("broom")
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/KQF_clean/code/import.R", echo=TRUE)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/KQF_clean/code/clean.R", echo=TRUE)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/KQF_clean/code/clean.R", echo=TRUE)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/KQF_clean/code/clean.R", echo=TRUE)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/KQF_clean/code/clean.R", echo=TRUE)
View(temp_precip)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/KQF_clean/code/clean.R", echo=TRUE)
source("C:/Users/user/OneDrive - University of Massachusetts/kqf_project/code/kqf_analysis.R", echo=TRUE)
glimpse(fruit_data_norm)
fruit_data_norm %>%
>>>>>>> 440cbed273398a07b9ab4d6d52f1660fb9e3401e
